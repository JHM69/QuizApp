package com.jhm69.quizapp_hometask.repository;import android.app.Application;import android.os.AsyncTask;import androidx.lifecycle.LiveData;import com.jhm69.quizapp_hometask.dao.DaoAccess;import com.jhm69.quizapp_hometask.db.QuizResultDatabase;import com.jhm69.quizapp_hometask.model.Quiz;import java.util.List;public class QuizResultRepository {    private final DaoAccess resultDao;    private final LiveData<List<Quiz>> allBattles;    public QuizResultRepository(Application application) {        QuizResultDatabase database = QuizResultDatabase.getInstance(application);        resultDao = database.daoAccess();        allBattles = resultDao.getAllResult();    }    public void insertBattle(Quiz battleModel) {        new InsertNoteAsyncTask(resultDao).execute(battleModel);    }    public LiveData<Quiz> getBattleOffline(String id) {        return resultDao.getResult(id);    }    public Quiz getDeadBattleOffline(String id) {        return resultDao.getDeadResult(id);    }    public void deleteBattle(String battleModel) {        new DeleteBattleModelAsyncTask(resultDao).execute(battleModel);    }    public LiveData<List<Quiz>> getAllNotes() {        return allBattles;    }    private static class InsertNoteAsyncTask extends AsyncTask<Quiz, Void, Void> {        private final DaoAccess resultDao;        private InsertNoteAsyncTask(DaoAccess resultDao) {            this.resultDao = resultDao;        }        @Override        protected Void doInBackground(Quiz... results) {            resultDao.insertResult(results[0]);            return null;        }    }    private static class DeleteBattleModelAsyncTask extends AsyncTask<String, Void, Void> {        private final DaoAccess resultDao;        private DeleteBattleModelAsyncTask(DaoAccess resultDao) {            this.resultDao = resultDao;        }        @Override        protected Void doInBackground(String... results) {            resultDao.deleteResult(results[0]);            return null;        }    }}