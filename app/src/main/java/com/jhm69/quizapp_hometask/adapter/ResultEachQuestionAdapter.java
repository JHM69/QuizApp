package com.jhm69.quizapp_hometask.adapter;import android.animation.Animator;import android.annotation.SuppressLint;import android.content.Context;import android.content.res.ColorStateList;import android.graphics.Color;import android.graphics.drawable.GradientDrawable;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.animation.DecelerateInterpolator;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.jhm69.quizapp_hometask.R;import com.jhm69.quizapp_hometask.model.Question;import java.util.List;public class ResultEachQuestionAdapter extends RecyclerView.Adapter<ResultEachQuestionAdapter.MyViewHolder> {    final List<Question> questionEachResults;    final List<Boolean> answers;    final List<Integer> answerList;    //final BottomSheetDialog mBottomSheetDialog;    int count;    final Context context;    @SuppressLint("InflateParams")    public ResultEachQuestionAdapter(List<Question> questionEachResults,List<Boolean> answers, List<Integer> answerList, Context context) {        this.questionEachResults = questionEachResults;        this.answers = answers;        this.answerList = answerList;        this.context = context;    }    @NonNull    @Override    public MyViewHolder onCreateViewHolder(ViewGroup viewGroup, int i) {        View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.item_each_question_result, viewGroup, false);        return new MyViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull MyViewHolder viewHolder, @SuppressLint("RecyclerView") int i) {        Question q = questionEachResults.get(i);        Boolean ans = answers.get(i);        Integer index = answerList.get(i);        Log.d("answers", "onBindViewHolder: "+ ans);        try {            if (ans) {                viewHolder.hoisekina.setBackgroundResource(R.drawable.ic_baseline_check_24);            } else {                viewHolder.hoisekina.setBackgroundResource(R.drawable.ic_baseline_clear_24);            }        } catch (NullPointerException ignored) {        }        ((TextView)viewHolder.questionQ.getChildAt(0)).setText(q.getQuestion());        viewHolder.questionText.setText(String.valueOf(i + 1));        LinearLayout optionsContainer = viewHolder.sheetView;        for(int j=0; j<4; j++){            GradientDrawable drawable = (GradientDrawable)optionsContainer.getChildAt(j).getBackground();            if(j == index){                drawable.mutate();                drawable.setStroke(4,Color.parseColor("#B11C1C"));                drawable.setColor(Color.parseColor("#FCD4DA"));            }            if(j == q.getCorrectAnswerIndex() ){                drawable.mutate();                drawable.setStroke(4,Color.parseColor("#4BBB4F"));                drawable.setColor(Color.parseColor("#DCFFDE"));            }            LinearLayout linearLayout = (LinearLayout) optionsContainer.getChildAt(j);            TextView textView = (TextView) linearLayout.getChildAt(0);            textView.setText(q.getOptions().get(j));        }    }    @Override    public int getItemCount() {        return questionEachResults.size();    }    public static class MyViewHolder extends RecyclerView.ViewHolder {        final TextView questionText;        final LinearLayout questionQ;        final LinearLayout sheetView;        final ImageView hoisekina;        public MyViewHolder(View itemView) {            super(itemView);            questionText = itemView.findViewById(R.id.textView3);            sheetView = itemView.findViewById(R.id.contaner);            questionQ = itemView.findViewById(R.id.questionQ);            hoisekina = itemView.findViewById(R.id.hoisekina);        }    }}