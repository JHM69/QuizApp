package com.jhm69.quizapp_hometask.adapter;import android.annotation.SuppressLint;import android.app.Activity;import android.app.ActivityOptions;import android.app.AlertDialog;import android.content.Context;import android.content.Intent;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.view.animation.Animation;import android.view.animation.AnimationUtils;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.fragment.app.FragmentActivity;import androidx.lifecycle.ViewModelProviders;import androidx.recyclerview.widget.RecyclerView;import com.github.marlonlom.utilities.timeago.TimeAgo;import com.jhm69.quizapp_hometask.R;import com.jhm69.quizapp_hometask.activity.QuizBattle;import com.jhm69.quizapp_hometask.activity.ResultActivity;import com.jhm69.quizapp_hometask.model.Quiz;import com.jhm69.quizapp_hometask.viewmodel.BattleViewModel;import java.util.List;public class ResultAdapter extends RecyclerView.Adapter<ResultAdapter.MyViewHolder> {    private final List<Quiz> results;    private final Context context;    private final BattleViewModel battleViewModel;    public ResultAdapter(List<Quiz> results, Activity context) {        this.results = results;        this.context = context;        battleViewModel = ViewModelProviders.of((FragmentActivity) context).get(BattleViewModel.class);    }    @NonNull    @Override    public MyViewHolder onCreateViewHolder(ViewGroup viewGroup, int i) {        View view = LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.item_result, viewGroup, false);        return new MyViewHolder(view);    }    int lastPosition = -1;    @SuppressLint("SetTextI18n")    @Override    public void onBindViewHolder(@NonNull MyViewHolder holder, @SuppressLint("RecyclerView") int g) {            Animation animation = AnimationUtils.loadAnimation(context,                    (g > lastPosition) ? R.anim.up_from_bottom                            : R.anim.down_from_top);            holder.itemView.startAnimation(animation);            lastPosition = g;            Quiz quiz = results.get(g);            if(quiz.isCompleted()) holder.result.setText("Score: "+ quiz.score);            else holder.result.setText("Answered: "+ quiz.completed + " of "+ quiz.getQuestionList().size());            try {                holder.topic.setText(quiz.getTopic().toUpperCase());            }catch (Exception ignore){            }            holder.difficulty.setText(quiz.getDifficulty());            holder.time.setText(TimeAgo.using(quiz.getTimestamp()));            holder.itemView.setOnLongClickListener(view -> {                new AlertDialog.Builder(context)                        .setTitle("Clear this Quiz")                        .setMessage("Are you sure do you want to delete this Quiz?")                        .setPositiveButton("Yes", (dialog, which) -> {                            battleViewModel.delete(quiz.getBattleId());                        })                        .setNegativeButton("No", null)                        .show();                return false;            });            holder.itemView.setOnClickListener(view -> {                if (quiz.isCompleted()) {                    Intent intent = new Intent(context, ResultActivity.class);                    intent.putExtra("id", quiz.getBattleId());                    context.startActivity(intent,  ActivityOptions.makeSceneTransitionAnimation((Activity)context).toBundle());                } else {                    Intent intent = new Intent(context, QuizBattle.class);                    intent.putExtra("id", quiz.getBattleId());                    context.startActivity(intent, ActivityOptions.makeSceneTransitionAnimation((Activity)context).toBundle());                }            });    }    @Override    public int getItemCount() {        return results.size();    }    public static class MyViewHolder extends RecyclerView.ViewHolder {        public final TextView topic;        public final TextView difficulty;        public final TextView result;        public final TextView time;        public MyViewHolder(View itemView) {            super(itemView);            topic = itemView.findViewById(R.id.topic);            difficulty = itemView.findViewById(R.id.difficulty);            result = itemView.findViewById(R.id.result);            time = itemView.findViewById(R.id.time);        }    }}